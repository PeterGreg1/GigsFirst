Imports CommonFunctions

Partial Class admin_events_DuplicateEventsOnVenue
    Inherits System.Web.UI.Page
    Private DBCallsEventsAdmin As New DBCallsEventsAdmin()

    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        If Not Page.IsPostBack Then
            tbDateFrom.Text = FormatDateTime(DateTime.Now, DateFormat.ShortDate)
        End If
    End Sub

    Sub BindData()
        Dim dDateFrom As Date = Nothing
        Dim dDateTo As Date = Nothing
        If IsDate(tbDateFrom.Text) Then
            dDateFrom = tbDateFrom.Text
        End If
        If IsDate(tbDateTo.Text) Then
            dDateTo = tbDateTo.Text
        End If
        Dim dtVenues As DataTable = DBCallsEventsAdmin.GetDuplicateEventsOnVenue(dDateFrom, dDateTo)
        gvDuplicates.DataSource = dtVenues
        gvDuplicates.DataBind()
        ViewState("gvDuplicates") = gvDuplicates.DataSource '// put into viewstate to allow sorting
    End Sub

    Protected Sub gvDuplicates_RowCommand(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewCommandEventArgs) Handles gvDuplicates.RowCommand
        Select Case e.CommandName
            Case "view"
                Dim arrParams As Array = Split(e.CommandArgument, ",")
                ViewState("EventDate") = arrParams(0)
                ViewState("VenueID") = arrParams(1)
                BindEvents(arrParams(0), arrParams(1))
        End Select
    End Sub

    Sub BindEvents(ByVal EventDate As Date, ByVal VenueID As Integer)
        Dim dtEvents As DataTable = DBCallsEventsAdmin.GetEvents(, EventDate, , VenueID).Tables(0)
        ViewState("dtEvents") = dtEvents
        gvEvents.DataSource = dtEvents
        gvEvents.DataBind()
    End Sub

    Protected Sub gvDuplicates_RowDataBound(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewRowEventArgs) Handles gvDuplicates.RowDataBound
        If e.Row.RowType = ListItemType.Item Or e.Row.RowType = ListItemType.AlternatingItem Then
            Dim btnView As Button = e.Row.FindControl("btnView")
            btnView.CommandArgument = e.Row.DataItem("eventdate") & "," & e.Row.DataItem("venueid")
        End If
    End Sub

    Protected Sub gvEvents_RowCommand(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewCommandEventArgs) Handles gvEvents.RowCommand
        Select Case e.CommandName
            Case "deleteme"
                DBCallsEventsAdmin.DeleteEvent(e.CommandArgument)
                BindEvents(ViewState("EventDate"), ViewState("VenueID"))
                BindData()
                DoSort(gvDuplicates.PageIndex, ViewState("sortcolumn"), ViewState("sortdirection"))
        End Select
    End Sub

    Protected Sub gvEvents_RowDataBound(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewRowEventArgs) Handles gvEvents.RowDataBound
        If e.Row.RowType = ListItemType.Item Or e.Row.RowType = ListItemType.AlternatingItem Then
            Dim dvEvents As New DataView(ViewState("dtEvents"))
            dvEvents.RowFilter = "EventID <> " & e.Row.DataItem("EventID")
            Dim ddlEventMerge As DropDownList = e.Row.FindControl("ddlEventMerge")
            ddlEventMerge.DataSource = dvEvents
            ddlEventMerge.DataValueField = "EventID"
            ddlEventMerge.DataTextField = "EventID"
            ddlEventMerge.DataBind()
            Dim rptArtists As Repeater = e.Row.FindControl("rptArtists")
            Dim drvArtists As DataRowView = TryCast(e.Row.DataItem, DataRowView)
            rptArtists.DataSource = drvArtists.CreateChildView("Artists")
            rptArtists.DataBind()
            Dim rptVendors As Repeater = e.Row.FindControl("rptVendors")
            Dim drvVendors As DataRowView = TryCast(e.Row.DataItem, DataRowView)
            rptVendors.DataSource = drvVendors.CreateChildView("Vendors")
            rptVendors.DataBind()
        End If
    End Sub

    Protected Sub gvDuplicates_PageIndexChanging(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewPageEventArgs) Handles gvDuplicates.PageIndexChanging
        gvDuplicates.PageIndex = e.NewPageIndex
        DoSort(e.NewPageIndex, ViewState("sortcolumn"), ViewState("sortdirection"))
    End Sub

    Protected Sub gvDuplicates_Sorting(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewSortEventArgs) Handles gvDuplicates.Sorting
        ViewState("sortdirection") = GetSortdirection(ViewState("sortdirection"))
        DoSort(0, e.SortExpression, ViewState("sortdirection"))
    End Sub

    Sub DoSort(ByVal intPage As Integer, ByVal strSortColumn As String, ByVal strSortDirection As String)
        ViewState("sortcolumn") = strSortColumn
        ViewState("sortdirection") = strSortDirection
        Dim dtVenues As DataTable = ViewState("gvDuplicates")
        If dtVenues IsNot Nothing Then
            Dim dataView As New DataView(dtVenues)
            If ViewState("sortcolumn") <> "" Then
                dataView.Sort = strSortColumn & " " & ViewState("sortdirection")
            End If
            gvDuplicates.PageIndex = intPage
            gvDuplicates.DataSource = dataView
            gvDuplicates.DataBind()
        End If
    End Sub

    Protected Sub btnMerge_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnMerge.Click
        For Each gvRow As GridViewRow In gvEvents.Rows
            Dim cbAdd As CheckBox = gvRow.FindControl("cbAdd")
            Dim ddlEventMerge As DropDownList = gvRow.FindControl("ddlEventMerge")
            Dim hfEventID As HiddenField = gvRow.FindControl("hfEventID")
            Dim tbEventName As TextBox = gvRow.FindControl("tbEventName")
            Dim hfEventName As HiddenField = gvRow.FindControl("hfEventName")
            If cbAdd.Checked Then
                If ddlEventMerge.SelectedValue > 0 Then
                    DBCallsEventsAdmin.MergeEvents(hfEventID.Value, ddlEventMerge.SelectedValue)
                End If
                If tbEventName.Text <> hfEventName.value Then
                    DBCallsEventsAdmin.UpdateEventName(hfEventID.Value, tbEventName.Text)
                End If
            End If
        Next
        BindEvents(ViewState("EventDate"), ViewState("VenueID"))
        BindData()
        DoSort(gvDuplicates.PageIndex, ViewState("sortcolumn"), ViewState("sortdirection"))
    End Sub

    Protected Sub btnSearch_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnSearch.Click
        BindData()
    End Sub
End Class
