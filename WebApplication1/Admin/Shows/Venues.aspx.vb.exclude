Imports CommonFunctions

Partial Class admin_events_Venues
    Inherits System.Web.UI.Page
    Private DBCallsEventsAdmin As New DBCallsEventsAdmin()

    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        If Not Page.IsPostBack Then
            Dim strKeywords As String = Request.QueryString("keywords")
            If Trim(strKeywords) <> "" Then
                tbKeywords.Text = strKeywords
                BindData()
            End If
        End If
    End Sub

    Sub BindData()
        Dim dtVenues As DataTable = DBCallsEventsAdmin.GetVenues(tbKeywords.Text)
        ViewState("dtVenues") = DBCallsEventsAdmin.GetVenues()
        litResults.Text = dtVenues.Rows.Count
        gvVenues.DataSource = dtVenues
        gvVenues.DataBind()
        ViewState("gvVenues") = gvVenues.DataSource '// put into viewstate to allow sorting
    End Sub

    Protected Sub gvVenues_RowDataBound(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewRowEventArgs) Handles gvVenues.RowDataBound
        If e.Row.RowType = ListItemType.Item Or e.Row.RowType = ListItemType.AlternatingItem Then
            Dim ddlVenue As DropDownList = e.Row.FindControl("ddlVenue")
            Dim dtSimiliarVenues As DataTable = DBCallsEventsAdmin.GetSimiliarVenues(nullToStr(e.Row.DataItem("VenueName")), nullToStr(e.Row.DataItem("Town")))
            Dim dvSimiliarVenues As New DataView(dtSimiliarVenues)
            dvSimiliarVenues.RowFilter = "VenueID <> " & e.Row.DataItem("venueid")
            Dim litSimilarVenuesCount As Literal = e.Row.FindControl("litSimilarVenuesCount")
            litSimilarVenuesCount.Text = (dvSimiliarVenues.Table.Rows.Count - 1) & " similiar sounding venues<br />"
            Dim dvExistingVenues As New DataView(ViewState("dtVenues"))
            dvExistingVenues.RowFilter = "Town = '" & Replace(nullToStr(e.Row.DataItem("Town")), "'", "''") & "'"
            dvSimiliarVenues.Table.Merge(dvExistingVenues.ToTable)
            ddlVenue.DataSource = dvSimiliarVenues
            ddlVenue.DataValueField = "VenueID"
            ddlVenue.DataTextField = "venueandtown"
            ddlVenue.DataBind()
        End If
    End Sub

    Protected Sub btnAddEvents_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnMergeVenues.Click
        For Each gvRow As GridViewRow In gvVenues.Rows
            Dim cbAdd As CheckBox = gvRow.FindControl("cbAdd")
            Dim hfVenueID As HiddenField = gvRow.FindControl("hfVenueID")
            Dim hfVenueName As HiddenField = gvRow.FindControl("hfVenueName")
            Dim hfTown As HiddenField = gvRow.FindControl("hfTown")
            Dim hfPostcode As HiddenField = gvRow.FindControl("hfPostcode")
            Dim ddlVenue As DropDownList = gvRow.FindControl("ddlVenue")
            Dim tbVenueName As TextBox = gvRow.FindControl("tbVenueName")
            Dim tbTown As TextBox = gvRow.FindControl("tbTown")
            Dim tbPostcode As TextBox = gvRow.FindControl("tbPostcode")
            If cbAdd.Checked Then
                If ddlVenue.SelectedValue > 0 Then
                    DBCallsEventsAdmin.MergeVenues(hfVenueID.Value, ddlVenue.SelectedValue)
                End If
                If tbVenueName.Text <> hfVenueName.Value Or tbPostcode.Text <> hfPostcode.Value Or tbTown.Text <> hfTown.Value Then
                    DBCallsEventsAdmin.UpdateVenue(hfVenueID.Value, tbVenueName.Text, tbTown.Text, tbPostcode.Text)
                End If
            End If
        Next
        BindData()
        DoSort(gvVenues.PageIndex, ViewState("sortcolumn"), ViewState("sortdirection"))
    End Sub

    Protected Sub gvVenues_PageIndexChanging(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewPageEventArgs) Handles gvVenues.PageIndexChanging
        gvVenues.PageIndex = e.NewPageIndex
        DoSort(e.NewPageIndex, ViewState("sortcolumn"), ViewState("sortdirection"))
    End Sub

    Protected Sub gvVenues_Sorting(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewSortEventArgs) Handles gvVenues.Sorting
        ViewState("sortdirection") = GetSortdirection(ViewState("sortdirection"))
        DoSort(0, e.SortExpression, ViewState("sortdirection"))
    End Sub

    Sub DoSort(ByVal intPage As Integer, ByVal strSortColumn As String, ByVal strSortDirection As String)
        ViewState("sortcolumn") = strSortColumn
        ViewState("sortdirection") = strSortDirection
        Dim dtVenues As DataTable = ViewState("gvVenues")
        If dtVenues IsNot Nothing Then
            Dim dataView As New DataView(dtVenues)
            If ViewState("sortcolumn") <> "" Then
                dataView.Sort = strSortColumn & " " & ViewState("sortdirection")
            End If
            gvVenues.PageIndex = intPage
            gvVenues.DataSource = dataView
            gvVenues.DataBind()
        End If
    End Sub

    Protected Sub btnSearch_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnSearch.Click
        BindData()
    End Sub
End Class
